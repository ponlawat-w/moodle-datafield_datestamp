<?php

require_once(__DIR__ . '/lib.php');

class data_field_datestamp extends data_field_base {

    public $type = 'datestamp';

    public function __construct($field = 0, $data = 0, $cm = 0) {
        parent::__construct($field, $data, $cm);
    }

    function display_search_field() {
        return '';
    }

    function display_add_field($recordid = 0, $formdata = null) {
        return '';
    }

    function display_edit_field() {
        global $CFG, $DB, $OUTPUT, $COURSE;

        $coursecontext = context_course::instance($COURSE->id);
        $roleobjs = get_roles_used_in_context($coursecontext);
        $roleobjs = role_fix_names($roleobjs, $coursecontext, ROLENAME_ALIAS);
        $roles = [];
        foreach ($roleobjs as $roleobj) {
            $name = $roleobj->localname;
            if (!$name) {
                $name = $roleobj->name;
            }
            if (!$name) {
                $name = $roleobj->shortname;
            }
            $roles[$roleobj->id] = $name;
        }

        $selectedroles = datafield_datestamp_getroles($this->field);

        if (empty($this->field)) {   // No field has been defined yet, try and make one
            $this->define_default_field();
        }
        echo $OUTPUT->box_start('generalbox boxaligncenter boxwidthwide');

        echo '<form id="editfield" action="'.$CFG->wwwroot.'/mod/data/field.php" method="post">'."\n";
        echo '<input type="hidden" name="d" value="'.$this->data->id.'" />'."\n";
        if (empty($this->field->id)) {
            echo '<input type="hidden" name="mode" value="add" />'."\n";
            $savebutton = get_string('add');
        } else {
            echo '<input type="hidden" name="fid" value="'.$this->field->id.'" />'."\n";
            echo '<input type="hidden" name="mode" value="update" />'."\n";
            $savebutton = get_string('savechanges');
        }
        echo '<input type="hidden" name="type" value="'.$this->type.'" />'."\n";
        echo '<input name="sesskey" value="'.sesskey().'" type="hidden" />'."\n";

        echo $OUTPUT->heading($this->name(), 3);

        require_once($CFG->dirroot.'/mod/data/field/'.$this->type.'/mod.html');

        echo '<div class="mdl-align">';
        echo '<input type="submit" class="btn btn-primary" value="'.$savebutton.'" />'."\n";
        echo '<input type="submit" class="btn btn-secondary" name="cancel" value="'.get_string('cancel').'" />'."\n";
        echo '</div>';

        echo '</form>';

        echo $OUTPUT->box_end();
    }

    function display_browse_field($recordid, $template) {
        global $PAGE;
        if ($template == 'listtemplate') {
            $content = datafield_datestamp_getcontent($recordid, $this->field->id);
            return datafield_datestamp_getbadge($content, false);
        }
        if ($template == 'singletemplate') {
            $PAGE->requires->js(new moodle_url('/mod/data/field/datestamp/singletemplate.js'));
            return datafield_datestamp_getsingletemplate($recordid, $this->field);
        }

        return parent::display_browse_field($recordid, $template); // TODO: Change the autogenerated stub
    }

    function update_content($recordid, $value, $name = '') {
        return parent::update_content($recordid, $value, $name); // TODO: Change the autogenerated stub
    }

    public function parse_search_field($defaults = null) {
        $param = 'f_' . $this->field->id;
        if (empty($defaults[$param])) {
            $defaults = array($param => '');
        }
        return optional_param($param, $defaults[$param], PARAM_NOTAGS);
    }

}
